version: 2.1

commands:

  configure-dockerhub:
    description: Configure Docker Hub access
    steps:
      - run:
          name: docker login
          command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}

  install-docker-buildx:
    description: Install Docker Buildx
    steps:
      - run:
          name: Install Docker Buildx
          command: |
            mkdir -vp ~/.docker/cli-plugins/
            curl --silent -L "https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx version
            sudo apt-get update && sudo apt-get install -y binfmt-support qemu-user-static
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker run --privileged --rm tonistiigi/binfmt --install arm64
            docker context create buildcontext
            docker buildx create buildcontext --use

jobs:
  build-go:
    docker:
      - image: cimg/go:1.17
    environment:
      GO111MODULE: "on"
    working_directory: ~/go/src/github.com/hashicorpdemoapp/product-api-go
    steps:
      - checkout
      - run:
          name: install dependencies
          command: go get -u golang.org/x/sys/...
      - run:
          name: test application
          command: go test -v ./...
      - run:
          name: build application (linux)
          command: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./bin/amd64/product-api
      - run:
          name: build application (arm64)
          command: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ./bin/arm64/product-api
      - persist_to_workspace:
          root: ~/go/src/github.com/hashicorpdemoapp
          paths:
            - product-api-go

  functional_test:
    machine:
      image: ubuntu-2004:current
    resource_class: medium
    environment:
      GO111MODULE: "on"
    working_directory: ~/go/src/github.com/hashicorpdemoapp/product-api-go
    steps:
      - attach_workspace:
          at: ~/go/src/github.com/hashicorpdemoapp
      - run:
          name: install shipyard
          command: |
            curl https://shipyard.run/install | bash
      - run:
          name: cucumber tests
          command: make test_functional

  publish-docker-release:
    docker:
      - image: cimg/base:stable
    working_directory: ~/go/src/github.com/hashicorpdemoapp/product-api-go
    steps:
      - setup_remote_docker:
          version: 19.03.14
      - install-docker-buildx
      - configure-dockerhub
      - attach_workspace:
          at: ~/go/src/github.com/hashicorpdemoapp
      - run:
          name: docker push
          command: |
            docker buildx inspect --bootstrap
            docker buildx build --platform linux/arm64,linux/amd64 \
                -t hashicorpdemoapp/product-api:${CIRCLE_TAG} \
                -f ./Dockerfile \
                ./bin \
                --push

  publish-docker-db-release:
    docker:
      - image: cimg/base:stable
    working_directory: ~/go/src/github.com/hashicorpdemoapp/product-api-go
    steps:
      - setup_remote_docker:
          version: 19.03.14
      - install-docker-buildx
      - configure-dockerhub
      - attach_workspace:
          at: ~/go/src/github.com/hashicorpdemoapp
      - run:
          name: docker push
          command: |
            docker buildx inspect --bootstrap
              docker buildx build --platform linux/arm64,linux/amd64 \
                -t hashicorpdemoapp/product-api-db:${CIRCLE_TAG} \
                -f ./database/Dockerfile \
                ./database \
                --push

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    working_directory: ~/go/src/github.com/hashicorpdemoapp/product-api-go
    steps:
      - attach_workspace:
          at: ~/go/src/github.com/hashicorpdemoapp
      - run:
          name: "Zip binaries"
          command: |
            cd ./bin
            zip -j product_api_go_linux_amd64.zip ./amd64/product-api
            zip -j product_api_go_linux_arm64.zip ./arm64/product-api
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -replace ${CIRCLE_TAG} ./bin/

workflows:
  version: 2
  build:
    jobs:
      - build-go
      - functional_test:
          requires:
            - build-go

  build-and-release:
    jobs:
      - build-go:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-docker-release:
          requires:
            - build-go
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-docker-db-release:
          requires:
            - build-go
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-github-release:
          requires:
            - build-go
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
